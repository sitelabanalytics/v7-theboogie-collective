---
import Link from "@components/ui/link.astro";
import Button from "./ui/button.astro";

import { Icon } from "astro-icon";
import { Picture } from "@astrojs/image/components";

---
<style>
  #heroSection {
    min-height: 65vh;
    max-width: 1640px;
  }
</style>

<main class="my-4 md:my-8">
  <div id="heroSection" class="mx-auto rounded-3xl">
    
    <iframe src='https://my.spline.design/untitled-93bb2d227f89b4514cfcf3423ca36a66/' frameborder='0' width='100%' height='100%' class="h-full "></iframe>

    
  </div>
</main>

<style>
  .invalid-feedback,
  .empty-feedback {
    display: none;
  }

  .was-validated :placeholder-shown:invalid ~ .empty-feedback {
    display: block;
  }

  .was-validated :not(:placeholder-shown):invalid ~ .invalid-feedback {
    display: block;
  }

  .is-invalid,
  .was-validated :invalid {
    border-color: #dc3545;
  }
</style>

<script is:inline>
  const form = document.getElementById("form");
  const result = document.getElementById("result");

  form.addEventListener("submit", function (e) {
    e.preventDefault();
    form.classList.add("was-validated");
    if (!form.checkValidity()) {
      form.querySelectorAll(":invalid")[0].focus();
      return;
    }
    const formData = new FormData(form);
    const object = Object.fromEntries(formData);
    const json = JSON.stringify(object);

    result.innerHTML = "Sending...";

    fetch("https://api.web3forms.com/submit", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        Accept: "application/json",
      },
      body: json,
    })
      .then(async (response) => {
        let json = await response.json();
        if (response.status == 200) {
          result.classList.add("text-green-500");
          result.innerHTML = json.message;
        } else {
          console.log(response);
          result.classList.add("text-red-500");
          result.innerHTML = json.message;
        }
      })
      .catch((error) => {
        console.log(error);
        result.innerHTML = "Something went wrong!";
      })
      .then(function () {
        form.reset();
        form.classList.remove("was-validated");
        setTimeout(() => {
          result.style.display = "none";
        }, 5000);
      });
  });
</script>
<script> 
	{
		document.getElementById('hiddenKey02').value = location.pathname;
		document.getElementById('hiddenKey03').value = document.referrer;
	}
	</script>