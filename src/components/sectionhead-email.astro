---
import Button from "./ui/button.astro";
---

<div id="containerFlex" class="flex flex-col-reverse md:flex-row justify-start items-center py-16 md:py-8">
  <div id="leftContainer" class="w-full lg:w-3/5 pt-8">
    <h1 class="text-5xl md:text-6xl xl:text-7xl max-w-5xl font-bold lg:tracking-tight">
      <slot name="title">Title</slot>
    </h1>
    <p class="sm:text-lg text-xl max-w-4xl mt-8 mb-16 text-slate-600">
      <slot name="desc">Some description goes here</slot>
    </p>
    
    <div id="formContainer" class="w-full lg:max-w-2xl">
      <h3 name="emailTitle" class="text-black text-xl md:text-3xl font-semibold mb-4">
        Get 10 free tips you can do yourself quickly and easily, to improve website and marketing conversion rate.
      </h3>
          <!-- To make this contact form work, create your free access key from https://web3forms.com/
          Then you will get all form submissions in your email inbox. -->
      <form netlify
        action="https://api.web3forms.com/submit"
        method="POST"
        id="short-form-V7"
        class="needs-validation"
        novalidate>

        <input type="hidden" name="access_key" value="YOUR_ACCESS_KEY_HERE" />
        <!-- Create your free access key from https://web3forms.com/ -->
        <input type="checkbox" class="hidden" style="display:none" name="botcheck" />
        <div id="innerFormContainer" class="flex flex-col lg:flex-row gap-4 my-4">
          <div class="my-2 w-full md:w-1/2">
            <input
              type="text"
              placeholder="Full Name"
              required
              class="w-full px-4 py-3 border-2 placeholder:text-gray-800 rounded-md outline-none focus:ring-4 border-gray-300 focus:border-gray-600 ring-gray-100"
              name="name"
            />
            <div class="empty-feedback invalid-feedback text-red-400 text-sm mt-1">
              Please provide your full name.
            </div>
          </div>
          <div class="my-2 w-full lg:w-1/2">
            <label for="email_address" class="sr-only">Email Address</label><input
              id="email_address"
              type="email"
              placeholder="Email Address"
              name="email"
              required
              class="w-full px-4 py-3 border-2 placeholder:text-gray-800 rounded-md outline-none focus:ring-4 border-gray-300 focus:border-gray-600 ring-gray-100"
            />
            <div class="empty-feedback text-red-400 text-sm mt-1">
              Please provide your email address.
            </div>
            <div class="invalid-feedback text-red-400 text-sm mt-1">
              Please provide a valid email address.
            </div>
          </div>
        </div>
        <Button type="submit" name="redirect" value="https://aidxn.com/success" class="py-2 py-4">Submit</Button>
        <div id="result" class="mt-3 text-center"></div>
      </form>
    </div>
  </div>
  <div id="rightContainer" class="w-full lg:w-2/5 py-8 flex items-center justify-center">
      <slot class="rounded" name="cover"></slot>
  </div>
</div>


<style>
  .invalid-feedback,
  .empty-feedback {
    display: none;
  }

  .was-validated :placeholder-shown:invalid ~ .empty-feedback {
    display: block;
  }

  .was-validated :not(:placeholder-shown):invalid ~ .invalid-feedback {
    display: block;
  }

  .is-invalid,
  .was-validated :invalid {
    border-color: #dc3545;
  }
</style>

<script is:inline>
  const form = document.getElementById("form");
  const result = document.getElementById("result");

  form.addEventListener("submit", function (e) {
    e.preventDefault();
    form.classList.add("was-validated");
    if (!form.checkValidity()) {
      form.querySelectorAll(":invalid")[0].focus();
      return;
    }
    const formData = new FormData(form);
    const object = Object.fromEntries(formData);
    const json = JSON.stringify(object);

    result.innerHTML = "Sending...";

    fetch("https://api.web3forms.com/submit", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        Accept: "application/json",
      },
      body: json,
    })
      .then(async (response) => {
        let json = await response.json();
        if (response.status == 200) {
          result.classList.add("text-green-500");
          result.innerHTML = json.message;
        } else {
          console.log(response);
          result.classList.add("text-red-500");
          result.innerHTML = json.message;
        }
      })
      .catch((error) => {
        console.log(error);
        result.innerHTML = "Something went wrong!";
      })
      .then(function () {
        form.reset();
        form.classList.remove("was-validated");
        setTimeout(() => {
          result.style.display = "none";
        }, 5000);
      });
  });
</script>
